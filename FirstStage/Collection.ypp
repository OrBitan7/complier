%{
void yyerror (const char *s);
int yylex();
#include <stdlib.h>
#include <ctype.h>
#include <string>
#include <set>
#include <iostream>
using namespace std;
void GenerateColDef(std::string colVar)
{
	cout << "char* "<<colVar<<"=NULL;"<<endl;
}
%}

%code requires {
#include <iostream>
#include <string>
#include <set>
}
%union {std::string type_string;
		int type_number;
		std::set<std::string> type_collection;
		std::set<int> type_set;
		}  
%token <type_string> t_STRING t_ID
%token <type_number> t_INT
%token t_IF_CMD t_ELSE_CMD t_FOR_CMD t_WHILE_CMD t_BIGGER_EQUAL t_LOWER_EQUAL t_EQUAL t_NOT t_COLLECTION_CMD t_SET_CMD t_INT_CMD t_STRING_CMD t_INPUT_CMD t_OUTPUT_CMD
%type <type_string> VAR


%%
/* descriptions of expected inputs     corresponding actions (in C) */
SENTENCE :	t_STRING			//Place Holder
	|		t_COLLECTION_CMD VAR ';'				{GenerateColDef($2);}
VAR :
    t_ID                                    { $$ = $1; }
    ;
%%                     /* C code */




